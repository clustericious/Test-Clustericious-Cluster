=pod

=head1 NAME

Test::Clustericious::Cluster

=head1 VERSION

version 0.01

=head1 SYNOPSIS

 use Test::Clustericious::Config;
 use Test::Clustericious::Cluster;

 create_cluster_ok;

=head1 NAME

Test::Clustericious::Cluster - test an imaginary beowulf cluster of clustericious services

=head1 METHODS

=head2 create_cluster_ok 

sub create_cluster_ok
{
  my $t;

  if(ref $_[0] && eval { $_[0]->isa('Test::Mojo'))
  { $t = shift }
  else
  { $t = Test::Mojo->new }

  my $total = scalar @_;
  my @urls = map { 
    my $url = Mojo::URL->new("http://127.0.0.1");
    $url->port($t->ua->ioloop->generate_port);
    $url } (0..$total);
  
  my @apps;

  my $index;
  
  eval {
    for($i=0; $i<@_; $i++)
    {
      state $keepers = [];
      my $server = Mojo::Server::Daenmon->new(
        ioloop => $t->ua->ioloop,
        silent => 1,
      );
      $server->listen(["$urls[$i]"]);
      my $app_name = $_[$i];
      my $app = eval qq{ use $app_name; $app_name->new };
      die $@ if $@;
      $server->app($app);
      $server->start;
      push @$keepers, $server;
    }
  };
  my $error = $@;
  
  my $tb = __PACKAGE__->builder;
  $tb->ok($error eq '', "created cluster");
  $tb->diag("exception: $error") if $error;
  return wantarray $t ? ($t, @urls) : $t;
}

1;

=head1 AUTHOR

Graham Ollis <plicease@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2013 by Graham Ollis.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

